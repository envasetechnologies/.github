name: Render ECS Task Definition
description: takes in ecs task definition and updated the image
inputs:

  default-shell:
    description: Shell used to run steps.
    required: false
    default: bash

  task-def-path:
    description: relative path to your ecs task definition file.
    required: true

  image:
    description: docker image e.g. 518892363268.dkr.ecr.us-east-1.amazonaws.com/your-application:1.3.2
    required: true

  environment-variables:
    description: string of environment variables that will be rendered into your task def.
    required: false

runs:
  using: composite
  steps:
    - name: Build task def from template
      shell: ${{inputs.default-shell}}
      run: |
        # install deps

        sudo apt-get install which jq unzip
        curl -sSL https://git.io/get-mo -o mo
        chmod +x ./mo

        # install aws cli
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        chmod +x ./aws/install && ./aws/install

        SECRET_ID="$APP_NAME/$ENVIRONMENT"
        # Determine dev or prod env & set jq path
        JQ_PATH=$(which jq)

        output=$(aws secretsmanager get-secret-value --secret-id $SECRET_ID --output text)
        splitOutput=( $output )
        secretArn=${splitOutput[0]}
        export secretArn=$secretArn

        add_xray_deamon() {
          cat task-definition-template.json | $JQ_PATH '.containerDefinitions += [{
                    "logConfiguration": {
                    "logDriver": "awslogs",
                    "options": {
                      "awslogs-group": "/ecs/{{APP_NAME}}-{{ENVIRONMENT}}",
                      "awslogs-region": "us-east-1",
                      "awslogs-stream-prefix": "ecs"
                    }
                  },
                  "portMappings": [
                    {
                      "hostPort": 2000,
                      "protocol": "udp",
                      "containerPort": 2000
                    }
                  ],
                  "cpu": 128,
                  "environment": [],
                  "mountPoints": [],
                  "memoryReservation": 256,
                  "volumesFrom": [],
                  "image": "amazon/aws-xray-daemon",
                  "name": "xray-daemon"
                }]' | mo > task-definition.json
        }

        # Create task-def file with populated secrets
        echo "Creating task-definition.json file"
        cat task-definition-template.json | mo > task-definition.json

        if [ "$ENVIRONMENT" == "prod" ] || [ "$ENVIRONMENT" == "prd" ]; then
          add_xray_deamon
        fi

        echo "Task definition created"


    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        image: ${{ inputs.image }}
        task-definition: ${{ inputs.task-def-path }}
        # container-name: ${{ inputs.container-name }}
        container-name: web
        environment-variables: ${{ inputs.environment-variables }}
